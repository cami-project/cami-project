version: '2'
services:
  cami-mysql:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-mysql
    ports:
      # Make the MySQL server available on the host so VMs can access it
      - "3307:3306"

  cami-rabbitmq:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-rabbitmq
    ports:
      # Make the RabbitMQ server available on the host so VMs can access it
      - "5673:5672"
      - "15673:15672"

  cami-store:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-store
    links:
      - cami-mysql
    ports:
      - "8008:8008"
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-mysql:3306 -- docker-entrypoint.sh

  cami-store-migrate:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-store
    links:
      - cami-mysql
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-mysql:3306 -- docker-migration-entrypoint.sh

  # Run migrations in a separate container from the main applications. The
  # container will just run migrations and load fixtures and then exit.
  cami-medical-compliance-migrate:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-medical-compliance
    links:
      - cami-mysql
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-mysql:3306 -- docker-migration-entrypoint.sh

  cami-medical-compliance:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-medical-compliance
    links:
      - cami-mysql
      - cami-rabbitmq
    ports:
      - "8000:8000"
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-mysql:3306 -- docker-entrypoint.sh

  # Runs the Celery worker for consuming messages received by the medical-compliance
  cami-medical-compliance-message-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-medical-compliance
    links:
      - cami-mysql
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-mysql:3306 -- docker-message-worker-entrypoint-dev.sh

  # Runs the Celery task scheduler for medical-compliance
  cami-medical-compliance-task-scheduler:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-medical-compliance
    links:
      - cami-mysql
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-mysql:3306 -- docker-task-scheduler-entrypoint-dev.sh

  # Should use cached image that is build for cami-frontend-migrate
  cami-frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-frontend
    links:
      - cami-rabbitmq
    ports:
      - "8001:8001"
    volumes:
      - .:/cami-project
    entrypoint: docker-entrypoint.sh

  # Runs the Celery worker for consuming messages received by the frontend
  cami-frontend-message-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-frontend
    links:
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: docker-message-worker-entrypoint-dev.sh

  # Runs the Celery worker for consuming measurements and distribute them to the Linkwatch platform
  cami-linkwatch-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-linkwatch
    links:
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: docker-message-worker-entrypoint-dev.sh

  # Runs the Celery worker for consuming measurements and distribute them to the OpenTele platform
  cami-opentele-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-opentele
    links:
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: docker-message-worker-entrypoint-dev.sh

  # Runs the Celery worker for consuming messages received by the google-calendar
  cami-google-calendar:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-google-calendar
    links:
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: docker-message-worker-entrypoint-dev.sh

  # Runs the Celery task scheduler for google-calendar
  cami-google-calendar-task-scheduler:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-google-calendar
    links:
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: docker-task-scheduler-entrypoint-dev.sh

# Runs the CAMI Insertion Service implementing the endpoints for measurement and event insertion into the
# CAMI Event Stream Manager (the RabbitMQ message broker)
  cami-insertion:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-insertion
    links:
      # Needs the RabbitMQ broker
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    ports:
      - "8010:8010"
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-rabbitmq:5672 -- docker-entrypoint.sh

# Runs the CAMI Decision Support Service
  cami-dss:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-dss
    links:
      - cami-rabbitmq
      - cami-store
    depends_on:
      - "cami-store" 
    #volumes:
    #  - DSS:/app

volumes:
    .:
      external: True

    #DSS:
    #  external: True

    