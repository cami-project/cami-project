swagger: "2.0"
info:
  description: "Description of the CAMI Insertion API."
  version: "1.0.0"
  title: "CAMI Insertion Endpoints"
  termsOfService: "http://swagger.io/terms/"

host: <cami_hostname_or_ip>:8010
basePath: "/api/v1/insertion"
tags:
- name: "measurements"
  description: "CAMI health measurement insertion endpoint"
- name: "events"
  description: "Event insertion endpoint"
- name: "push_notifications"
  description: "Push notification insertion endpoint"
schemes:
- "http"
paths:
  /measurements:
    post:
      tags:
      - "measurements"
      summary: "Insert a new health measurement into the CAMI System"
      operationId: "insertMeasurement"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Measurement object that needs to be inserted in the CAMI System"
        required: true
        schema:
          $ref: "#/definitions/Measurement"
      responses:
        201:
          description: "Measurement successfully inserted"
        400:
          description: "Invalid measurement content"
        405:
          description: "Invalid request method"

  /events:
    post:
      tags:
      - "events"
      summary: "Insert a new event into the CAMI System"
      description: ""
      operationId: "insertEvent"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Event object that needs to be inserted in the CAMI System"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        201:
          description: "Event successfully inserted"
        400:
          description: "Invalid event content"
        405:
          description: "Invalid request method"
          
  /push_notifications:
    post:
      tags:
      - "push_notifications"
      summary: "Insert a push notification into the CAMI System to be sent to an user"
      description: ""
      operationId: "insertPushNotification"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Push notification object that needs to be sent through the CAMI System"
        required: true
        schema:
          $ref: "#/definitions/PushNotification"
      responses:
        201:
          description: "Push notification successfully inserted"
        400:
          description: "Invalid push notification content"
        405:
          description: "Invalid request method"

definitions:
  Measurement:
    type: "object"
    required:
    - "measurement_type"
    - "unit_type"
    - "timestamp"
    - "user"
    - "device"
    - "value_info"
    properties:
      measurement_type:
        type: "string"
        enum:
          - weight
          - blood_pressure
          - pulse
          - temperature
          - saturation
          - steps
        description: "The type of health measurement that was carried out."
        
      unit_type:
        type: "string"
        enum:
          - kg
          - mmhg
          - bpm
          - celsius
          - no_dim
        description: "The unit of measurement for the recorded health reading."
          
      timestamp:
        type: "integer"
        description: "Time when the measurement was taken, given as UNIX Epoch timestamp."
        format: "int64"
      
      user:
        type: "string"
        description: "The URI corresponding to the User resource present in the CAMI Store, for which this health measurement was taken."
        example: "/api/v1/user/14/"
        format: "URI"
        
      device:
        type: "string"
        description: "The URI corresponding to the Device resource present in the CAMI Store, with which this health measurement was taken."
        example: "/api/v1/device/1/"
        format: "URI"
      
      value_info:
        type: "string"
        description: "A field representing the JSON encoding of the health parameters recorded by this measurement."
        example: "{'systolic': 115, 'diastolic': 70}"

      gateway_id:
        type: "string"
        description: "A field containing a unique identifier (encoded as a string) of the Eclexys SNG Gateway instance which is used to relay the measurement."

  Event:
    type: "object"
    properties:
      category: 
        type: "string"
        description: "The category in which this event is classified. An event can relate to the home environment, the user's health or his response to notifications generated by the CAMI system."
        enum:
          - USER_ENVIRONMENT
          - USER_HEALTH
          - USER_NOTIFICATIONS
      
      content:
        $ref: "#/definitions/EventContent"
      
      annotations:
        $ref: "#/definitions/EventAnnotations"
  
  PushNotification:
    type: "object"
    required:
    - "user_id"
    - "message"
    properties:
      user_id:
        type: "integer"
        example: 2
        description: "The id of the user registered in the CAMI System"
        
      message:
        type: "string"
        description: "The literal message of the push notification"
        example: "Your blood pressure is way too low!"
    
  EventContent:
    type: "object"
    properties:
      name: 
        type: "string"
        description: "Name of the event generated. It is left general, but it will essentially be a big enumeration of event types."
        example: "presence_detected | kitchen_window"
      value_type:
        type: "string"
        description: "The value type of the event content. The content may be of numeric form, strings (including enumerations), boolean values or a complex structure. The latter is an additional object that identifies all the entities that take part in the event."
        enum:
          - integer
          - float
          - string
          - enum
          - boolean
          - complex
      value:
        type: "string"
        description: "The value of the event content. In case of a complex type, the value will be a JSON description of the entities involved in the event. For example in an event of type presence_detected, the entities can be the user who is detected and the room where he is detected. The room is identified just by its name, while the user is described using his name and the URL of the corresponding user resource."
        example:
          user:
            name: "Jim"
            uri: "/v1/resources/user/1/"
          room:
            name: "Kitchen"
      
  EventAnnotations:
    type: "object"
    description: "Meta properties of the inserted event."
    required:
      - timestamp
    properties:
      timestamp:
        type: "integer"
        format: "int64"
        description: "The time at which this event was detected/generated, given as a Unix Epoch timestamp."
      source:
        type: "string"
        description: "The source of this event. This will either be the URI of a device/sensor if the device is stored in the CAMI Store or the keyword 'DSS', if the event is inferred by the CAMI Decision Support Service."
        example: 
          - "DSS | /v1/resources/devices/3/"
      certainty:
        type: "number"
        description: "Degree of certainty in the provided event."
      temporal_validity:
        $ref: "#/definitions/ValidityInterval"
  
  ValidityInterval:
    type: "object"
    description: "The time interval during which the asserted event is considered to be / have been valid."
    properties:
      start_ts: 
        type: "integer"
        format: "int64"
        description: "The start of the validity interval, given as UNIX Epoch timestamp."
      end_ts: 
        type: "integer"
        format: "int64"
        description: "The end of the validity interval, given as UNIX Epoch timestamp."
