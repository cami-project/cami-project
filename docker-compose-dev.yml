version: '2'
services:
  cami-store:
    build:
      context: .
      dockerfile: Dockerfile-store
    ports:
      # Make the store MySQL available on the host so VMs can access it
      - "3307:3306"
  cami-rabbitmq:
    build:
      context: .
      dockerfile: docker/cami-rabbitmq/Dockerfile
    ports:
      # Make the RabbitMQ server available on the host so VMs can access it
      - "5673:5672"
      - "15673:15672"
  # Run migrations in a separate container from the main applications. The
  # container will just run migrations and load fixtures and then exit.
  cami-medical-compliance-migrate:
    build:
      context: .
      dockerfile: docker/cami-medical-compliance/Dockerfile
    links:
      - cami-store
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-store:3306 -- docker-migration-entrypoint.sh

  cami-medical-compliance:
    build:
      context: .
      dockerfile: docker/cami-medical-compliance/Dockerfile
    links:
      - cami-store
      - cami-rabbitmq
    ports:
      - "8000:8000"
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-store:3306 -- docker-entrypoint.sh

  # Runs the Celery worker for consuming messages received by the medical-compliance
  cami-medical-compliance-message-worker:
    build:
      context: .
      dockerfile: docker/cami-medical-compliance/Dockerfile
    links:
      # Needs the store to interact with the DB
      - cami-store
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-store:3306 -- docker-message-worker-entrypoint-dev.sh

  # Run migrations in a separate container from the main applications. The
  # container will just run migrations and load fixtures and then exit.
  cami-frontend-migrate:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    links:
      - cami-store
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-store:3306 -- docker-migration-entrypoint.sh

  # Should use cached image that is build for cami-frontend-migrate
  cami-frontend:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    links:
      - cami-store
      - cami-rabbitmq
    ports:
      - "8001:8001"
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-store:3306 -- docker-entrypoint.sh

  # Runs the Celery worker for consuming messages received by the frontend
  cami-frontend-message-worker:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    links:
      # Needs the store to interact with the DB
      - cami-store
      - cami-rabbitmq
    volumes:
      - .:/cami-project
    entrypoint: ./docker/lib/wait-for-it/wait-for-it.sh -s -t 30 cami-store:3306 -- docker-message-worker-entrypoint-dev.sh
